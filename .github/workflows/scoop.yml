name: scoop

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g. v1.1)'
        required: false

permissions:
  contents: write   # allows pushing commits back

jobs:
  scoop:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Set version vars
        shell: pwsh
        env:
          MANUAL_TAG: ${{ github.event.inputs.tag }} # pass input to env
          RELEASE_TAG: ${{ github.event.release.tag_name }}
        run: |
          if ($env:MANUAL_TAG -and $env:MANUAL_TAG -ne '') {
              $tag = $env:MANUAL_TAG                       # Manual trigger input
          } elseif ($env:RELEASE_TAG -and $env:RELEASE_TAG -ne '') {
              $tag = $env:RELEASE_TAG                      # Release trigger
          } elseif ($env:GITHUB_REF_NAME -and $env:GITHUB_REF_NAME -ne '') {
              $tag = $env:GITHUB_REF_NAME                  # Fallback for tag push
          } else {
              Write-Error "No tag provided. Set tag via workflow_dispatch input or trigger a release."
              exit 1
          }

          $version = $tag.TrimStart("v")         # e.g. v1.1 -> 1.1
          Write-Host "Using tag: $tag"
          Write-Host "Using version: $version"

          "TAG=$tag" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Download installer
        shell: pwsh
        run: |
          $url = "https://github.com/aelassas/servy/releases/download/${env:TAG}/servy-${env:VERSION}-net8.0-x64-installer.exe"
          Write-Host "Downloading Servy installer from $url"
          Invoke-WebRequest -Uri $url -OutFile "servy-${env:VERSION}-net8.0-x64-installer.exe"

      - name: Compute SHA256
        shell: pwsh
        run: |
          $HASH = Get-FileHash "servy-${env:VERSION}-net8.0-x64-installer.exe" -Algorithm SHA256
          $UPPER = $HASH.Hash.ToUpper()
          "HASH=$UPPER" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Update servy.json in scoop-bucket and push
        shell: pwsh
        env:
          HASH: ${{ env.HASH }}
          VERSION: ${{ env.VERSION }}
        run: |
          # Clone scoop-bucket into a folder
          git clone https://x-access-token:${{ secrets.PAT }}@github.com/aelassas/scoop-bucket.git scoop-bucket
          
          # Change to the folder where servy.json is
          Set-Location scoop-bucket
          
          # Path to the manifest inside the cloned repo
          $manifestPath = "servy.json"   # adjust if servy.json is elsewhere
          
          # Load and update JSON
          $json = Get-Content $manifestPath -Raw | ConvertFrom-Json
          $json.version = $env:VERSION
          $json.url = "https://github.com/aelassas/servy/releases/download/v$env:VERSION/servy-$env:VERSION-net8.0-x64-installer.exe"
          $json.hash = $env:HASH
          
          # Save formatted JSON
          $json | ConvertTo-Json -Depth 10 | Set-Content $manifestPath -Encoding UTF8
          
          # Commit and push
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if ((git status --porcelain) -ne '') {
            git add $manifestPath
            git commit -m "chore: update Servy Scoop manifest to version $env:VERSION"
            git push origin main
          } else {
            Write-Host "No changes to commit"
          }

      - name: Update servy.json in ScoopInstaller/Extras and create PR
        shell: pwsh
        env:
          HASH: ${{ env:HASH }}
          VERSION: ${{ env:VERSION }}
        run: |
          git clone https://x-access-token:${{ secrets.PAT }}@github.com/aelassas/Extras.git extras
          Set-Location extras
          git remote add upstream https://github.com/ScoopInstaller/Extras.git
          git fetch upstream
          git checkout -b update-servy-${{ env:VERSION }} upstream/master

          $manifestPath = "bucket/servy.json"
          
          if (-Not (Test-Path $manifestPath)) {
              Write-Host "Creating new manifest..."
          
              $jsonObj = [PSCustomObject]@{
                  version     = $env:VERSION
                  description = "Servy lets you run any app as a native Windows service with full control over working directory, startup type, process priority, logging, health checks, pre-launch scripts and parameters."
                  homepage    = "https://servy-win.github.io"
                  license     = "MIT"
                  url         = "https://github.com/aelassas/servy/releases/download/v$env:VERSION/servy-$env:VERSION-net8.0-x64-installer.exe"
                  hash        = $env:HASH
                  installer   = [PSCustomObject]@{
                      type = "exe"
                      args = @("/VERYSILENT", "/NORESTART", "/SUPPRESSMSGBOXES", "/SP-", "/CLOSEAPPLICATIONS", "/NOCANCEL", "/DIR=`$dir")
                      keep = $true
                  }
                  bin = @("servy-cli.exe")
              }
          
              $jsonObj | ConvertTo-Json -Depth 10 -Compress:$false | Out-File $manifestPath -Encoding UTF8
          }
          else {
              $json = Get-Content $manifestPath -Raw | ConvertFrom-Json
              $json.version = $env:VERSION
              $json.url     = "https://github.com/aelassas/servy/releases/download/v$env:VERSION/servy-$env:VERSION-net8.0-x64-installer.exe"
              $json.hash    = $env:HASH
              $json | ConvertTo-Json -Depth 10 -Compress:$false | Set-Content $manifestPath -Encoding UTF8
          }

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if ((git status --porcelain) -ne '') {
            git add $manifestPath
            git commit -m "servy: Update to version $env:VERSION"
            git push origin HEAD:update-servy-${{ env:VERSION }}
          } else {
            Write-Host "No changes to commit"
          }

      # - name: Open Pull Request
      #   uses: peter-evans/create-pull-request@v6
      #   with:
      #     token: ${{ secrets.PAT }}
      #     commit-message: "servy: Update to version ${{ env.VERSION }}"
      #     branch: update-servy-${{ env.VERSION }}
      #     title: "servy: Update to version ${{ env.VERSION }}"
      #     body: |
      #       Update Servy to ${{ env.VERSION }}.
      #     base: master
      #     push-to-fork: aelassas/Extras