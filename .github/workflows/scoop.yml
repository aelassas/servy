name: scoop

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g. v1.1)'
        required: false

permissions:
  contents: write   # allows pushing commits back

jobs:
  scoop:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Set version vars
        shell: pwsh
        env:
          MANUAL_TAG: ${{ github.event.inputs.tag }} # pass input to env
          RELEASE_TAG: ${{ github.event.release.tag_name }}
        run: |
          if ($env:MANUAL_TAG -and $env:MANUAL_TAG -ne '') {
              $tag = $env:MANUAL_TAG                       # Manual trigger input
          } elseif ($env:RELEASE_TAG -and $env:RELEASE_TAG -ne '') {
              $tag = $env:RELEASE_TAG                      # Release trigger
          } elseif ($env:GITHUB_REF_NAME -and $env:GITHUB_REF_NAME -ne '') {
              $tag = $env:GITHUB_REF_NAME                  # Fallback for tag push
          } else {
              Write-Error "No tag provided. Set tag via workflow_dispatch input or trigger a release."
              exit 1
          }

          $version = $tag.TrimStart("v")         # e.g. v1.1 -> 1.1
          Write-Host "Using tag: $tag"
          Write-Host "Using version: $version"

          "TAG=$tag" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Download installer
        shell: pwsh
        run: |
          $url = "https://github.com/aelassas/servy/releases/download/${env:TAG}/servy-${env:VERSION}-net8.0-x64-installer.exe"
          Write-Host "Downloading Servy installer from $url"
          Invoke-WebRequest -Uri $url -OutFile "servy-${env:VERSION}-net8.0-x64-installer.exe"

      - name: Compute SHA256
        shell: pwsh
        run: |
          $HASH = Get-FileHash "servy-${env:VERSION}-net8.0-x64-installer.exe" -Algorithm SHA256
          $UPPER = $HASH.Hash.ToUpper()
          "HASH=$UPPER" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Clone Scoop bucket
        shell: pwsh
        run: |
          git clone https://x-access-token:${{ secrets.PAT }}@github.com/aelassas/scoop-bucket.git scoop-bucket
          Set-Location scoop-bucket

      - name: Update servy.json in scoop-bucket
        shell: pwsh
        env:
          HASH: ${{ env.HASH }}
          VERSION: ${{ env.VERSION }}
        run: |
          $manifestPath = "servy.json"

          $json = Get-Content $manifestPath -Raw | ConvertFrom-Json
          $json.version = $env:VERSION
          $json.url = "https://github.com/aelassas/servy/releases/download/v$env:VERSION/servy-$env:VERSION-net8.0-x64-installer.exe"
          $json.hash = $env:HASH
          $json | ConvertTo-Json -Depth 10 | Set-Content $manifestPath -Encoding UTF8

      - name: Commit & push updated manifest to scoop-bucket
        shell: pwsh
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add servy.json
          git commit -m "chore: update Servy Scoop manifest to version $env:VERSION"
          git push origin main





