name: test

# Coverage Strategy:
# - Include: Servy.Core (core logic, high testability)
# - Exclude:
#     • Servy (WPF UI - low testability)
#     • Servy.Service (Windows Service - mocked extensively, limited practical coverage)
#     • Servy.Restarter (wrapper utility with minimal logic)

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 8.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore Servy.sln

      - name: Build solution
        run: dotnet build Servy.sln --configuration Release --no-restore

      - name: Run Servy.Core.UnitTests with coverage
        run: |
          dotnet test tests/Servy.Core.UnitTests/Servy.Core.UnitTests.csproj --configuration Release --no-build --collect:"XPlat Code Coverage" --results-directory ./TestResults/Core -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura

      - name: Run Servy.Restarter.UnitTests without coverage
        run: |
          dotnet test tests/Servy.Restarter.UnitTests/Servy.Restarter.UnitTests.csproj --configuration Release --no-build

      - name: Run Servy.Service.UnitTests without coverage
        run: |
          dotnet test tests/Servy.Service.UnitTests/Servy.Service.UnitTests.csproj --configuration Release --no-build

      - name: Run Servy.UnitTests without coverage
        run: dotnet test tests/Servy.UnitTests/Servy.UnitTests.csproj --configuration Release --no-build

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: TestResults/Core/**/coverage.cobertura.xml
          flags: unittests
          name: codecov-coverage-report
          fail_ci_if_error: true

      - name: Copy coverage file to fixed location
        run: |
          mkdir -p TestResults/fixed
          cp TestResults/Core/*/coverage.cobertura.xml TestResults/fixed/coverage.cobertura.xml

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          coveralls-token: ${{ secrets.COVERALLS_REPO_TOKEN }}
          file: TestResults/Core/fixed/coverage.cobertura.xml
          format: cobertura
          fail-on-error: true