<Window x:Class="Servy.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Servy"
        xmlns:resx="clr-namespace:Servy.Resources"
        xmlns:viewmodels="clr-namespace:Servy.ViewModels"
        xmlns:converters="clr-namespace:Servy.UI.Converters;assembly=Servy.UI"
        xmlns:helpers="clr-namespace:Servy.Helpers"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        Title="Servy"
        MinWidth="600"
        SizeToContent="WidthAndHeight"
        ResizeMode="CanMinimize"
        >
    <Window.Resources>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    </Window.Resources>
    <DockPanel>

        <!-- Menu Bar -->
        <Menu DockPanel.Dock="Top" Height="28">
            <!-- Export/Import Menu -->
            <MenuItem Header="{x:Static resx:Strings.Menu_Export}">
                <MenuItem Header="{x:Static resx:Strings.Menu_ExportXml}" Command="{Binding ExportXmlCommand}"/>
                <MenuItem Header="{x:Static resx:Strings.Menu_ExportJson}" Command="{Binding ExportJsonCommand}"/>
            </MenuItem>
            <MenuItem Header="{x:Static resx:Strings.Menu_Import}">
                <MenuItem Header="{x:Static resx:Strings.Menu_ImportXml}" Command="{Binding ImportXmlCommand}"/>
                <MenuItem Header="{x:Static resx:Strings.Menu_ImportJson}" Command="{Binding ImportJsonCommand}"/>
            </MenuItem>

            <!-- Manager Menu -->
            <MenuItem Header="{x:Static resx:Strings.Menu_Manager}" Command="{Binding ManagerCommand}" IsEnabled="{Binding IsManagerAppAvailable}"/>

            <!-- Clear Form Menu -->
            <MenuItem Header="{x:Static resx:Strings.Menu_ClearAll}" Command="{Binding ClearFormCommand}"/>

            <!-- Help Menu -->
            <MenuItem Header="{x:Static resx:Strings.Menu_Help}">
                <MenuItem Header="{x:Static resx:Strings.Menu_Doc}" Command="{Binding OpenDocumentationCommand}"/>
                <MenuItem Header="{x:Static resx:Strings.Menu_CheckUpdates}" Command="{Binding CheckUpdatesCommand}"/>
                <MenuItem Header="{x:Static resx:Strings.Menu_About}" Command="{Binding OpenAboutDialogCommand}"/>
            </MenuItem>
        </Menu>

        <!-- Grid -->
        <Grid>
            <Grid.RowDefinitions>
                <!-- Tabs -->
                <RowDefinition Height="*" />
                <!-- Action Buttons -->
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>


            <TabControl Grid.Row="0">
                <!-- Main tab UI -->
                <TabItem Header="{x:Static resx:Strings.Label_MainTab}">
                    <Grid Margin="20" HorizontalAlignment="Center" VerticalAlignment="Top" MinHeight="470">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="300"/>
                            <ColumnDefinition Width="100"/>
                        </Grid.ColumnDefinitions>

                        <!-- Service Name -->
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static resx:Strings.Label_ServiceName}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding ServiceName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5" Grid.ColumnSpan="2"/>

                        <!-- Service Description -->
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static resx:Strings.Label_ServiceDescription}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding ServiceDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5" Grid.ColumnSpan="2"/>

                        <!-- Process Path -->
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static resx:Strings.Label_ProcessPath}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding ProcessPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5"/>
                        <Button Grid.Row="2" Grid.Column="2" Content="{x:Static resx:Strings.Button_Browse}" Command="{Binding BrowseProcessPathCommand}" Margin="5,5,0,5"/>

                        <!-- Startup Directory -->
                        <TextBlock Grid.Row="3" Grid.Column="0" Text="{x:Static resx:Strings.Label_StartupDirectory}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding StartupDirectory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5"/>
                        <Button Grid.Row="3" Grid.Column="2" Content="{x:Static resx:Strings.Button_Browse}" Command="{Binding BrowseStartupDirectoryCommand}" Margin="5,5,0,5"/>

                        <!-- Process Parameters -->
                        <TextBlock Grid.Row="4" Grid.Column="0" Text="{x:Static resx:Strings.Label_ProcessParameters}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding ProcessParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5" Grid.ColumnSpan="2"/>
                        <TextBlock Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2"
                             Text="{x:Static resx:Strings.Info_ProcessParameters}" 
                             FontStyle="Normal" 
                             Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                             TextWrapping="Wrap"/>

                        <!-- Startup Type -->
                        <TextBlock Grid.Row="6" Grid.Column="0" Text="{x:Static resx:Strings.Label_StartupType}" Margin="0,5,10,5"/>
                        <ComboBox Grid.Row="6" 
                                  Grid.Column="1"
                                  ItemsSource="{Binding StartupTypes}"
                                  DisplayMemberPath="DisplayName"
                                  SelectedValue="{Binding SelectedStartupType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  SelectedValuePath="StartupType"
                                  Margin="0,5"
                                  Grid.ColumnSpan="2" />

                        <!-- Process Priority -->
                        <TextBlock Grid.Row="7" Grid.Column="0" Text="{x:Static resx:Strings.Label_ProcessPriority}" Margin="0,5,10,5"/>
                        <ComboBox Grid.Row="7" Grid.Column="1"
                                  ItemsSource="{Binding ProcessPriorities}"
                                  DisplayMemberPath="DisplayName"
                                  SelectedValue="{Binding SelectedProcessPriority, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  SelectedValuePath="Priority"
                                  Margin="0,5"
                                  Grid.ColumnSpan="2" />

                        <!-- Stdout Path -->
                        <TextBlock Grid.Row="8" Grid.Column="0" Text="{x:Static resx:Strings.Label_StdoutPath}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="8" Grid.Column="1" Text="{Binding StdoutPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5"/>
                        <Button Grid.Row="8" Grid.Column="2" Content="{x:Static resx:Strings.Button_Browse}" Command="{Binding BrowseStdoutPathCommand}" Margin="5,5,0,5"/>

                        <!-- Stderr Path -->
                        <TextBlock Grid.Row="9" Grid.Column="0" Text="{x:Static resx:Strings.Label_StderrPath}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="9" Grid.Column="1" Text="{Binding StderrPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5"/>
                        <Button Grid.Row="9" Grid.Column="2" Content="{x:Static resx:Strings.Button_Browse}" Command="{Binding BrowseStderrPathCommand}" Margin="5,5,0,5"/>

                        <!-- Enable Rotation -->
                        <CheckBox Grid.Row="10" Grid.Column="1"
                                  Content="{x:Static resx:Strings.Label_EnableRotation}"
                                  IsChecked="{Binding EnableRotation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Margin="0,5" />

                        <!-- Rotation Size -->
                        <TextBlock Grid.Row="11" Grid.Column="0" Text="{x:Static resx:Strings.Label_RotationSize}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="11" Grid.Column="1" Text="{Binding RotationSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5" IsEnabled="{Binding EnableRotation}" />
                        <TextBlock Grid.Row="11" Grid.Column="2" Text="{x:Static resx:Strings.Label_RotationSizeUnity}" VerticalAlignment="Center" Margin="5,5,0,5"/>



                    </Grid>
                </TabItem>

                <!-- Recovery Tab UI -->
                <TabItem Header="{x:Static resx:Strings.Label_RecoveryTab}">
                    <Grid Margin="20" HorizontalAlignment="Center" VerticalAlignment="Top" MinHeight="470">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="300"/>
                            <ColumnDefinition Width="100"/>
                        </Grid.ColumnDefinitions>

                        <!-- Enable Health Monitoring -->
                        <CheckBox Grid.Row="0" 
                          Grid.Column="1" 
                          Content="{x:Static resx:Strings.Label_EnableHealthMonitoring}"
                          IsChecked="{Binding EnableHealthMonitoring, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Margin="0,5" />

                        <!-- Heartbeat Interval -->
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static resx:Strings.Label_HeartbeatInterval}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding HeartbeatInterval, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5" IsEnabled="{Binding EnableHealthMonitoring}"/>
                        <TextBlock Grid.Row="1" Grid.Column="2" Text="{x:Static resx:Strings.Label_Seconds}" VerticalAlignment="Center" Margin="5,5,0,5"/>

                        <!-- Max Failed Checks -->
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static resx:Strings.Label_MaxFailedChecks}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding MaxFailedChecks, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5" IsEnabled="{Binding EnableHealthMonitoring}"/>
                        <TextBlock Grid.Row="2" Grid.Column="2" Text="{x:Static resx:Strings.Label_Attempts}" VerticalAlignment="Center" Margin="5,5,0,5"/>

                        <!-- Recovery Action -->
                        <TextBlock Grid.Row="3" Grid.Column="0" Text="{x:Static resx:Strings.Label_RecoveryAction}" Margin="0,5,10,5"/>
                        <ComboBox Grid.Row="3" 
                          Grid.Column="1"
                          ItemsSource="{Binding RecoveryActions, UpdateSourceTrigger=PropertyChanged}"
                          DisplayMemberPath="DisplayName"
                          SelectedValue="{Binding SelectedRecoveryAction, Mode=TwoWay}"
                          SelectedValuePath="RecoveryAction"
                          Margin="0,5"
                          IsEnabled="{Binding EnableHealthMonitoring}"
                          Grid.ColumnSpan="2" />

                        <!-- Max Restart Attempts -->
                        <TextBlock Grid.Row="4" Grid.Column="0" Text="{x:Static resx:Strings.Label_MaxRestartAttempts}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding MaxRestartAttempts, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5" IsEnabled="{Binding EnableHealthMonitoring}"/>
                        <TextBlock Grid.Row="4" Grid.Column="2" Text="{x:Static resx:Strings.Label_Attempts}" VerticalAlignment="Center" Margin="5,5,0,5"/>

                        <!-- Failure Program -->
                        <!-- Info -->
                        <TextBlock Grid.Row="5"  Grid.Column="1" Grid.ColumnSpan="3" Text="{x:Static resx:Strings.Info_FailureProgram}" FontStyle="Normal" Foreground="Black" TextWrapping="Wrap" Margin="5,0,0,5"/>

                        <!-- Process Path -->
                        <TextBlock Grid.Row="6" Grid.Column="0" Text="{x:Static resx:Strings.Label_ProcessPath}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="6" Grid.Column="1" Text="{Binding FailureProgramPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5"/>
                        <Button Grid.Row="6" Grid.Column="2" Content="{x:Static resx:Strings.Button_Browse}" Command="{Binding BrowseFailureProgramPathCommand}" Margin="5,5,0,5"/>

                        <!-- Startup Directory -->
                        <TextBlock Grid.Row="7" Grid.Column="0" Text="{x:Static resx:Strings.Label_StartupDirectory}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="7" Grid.Column="1" Text="{Binding FailureProgramStartupDirectory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5"/>
                        <Button Grid.Row="7" Grid.Column="2" Content="{x:Static resx:Strings.Button_Browse}" Command="{Binding BrowseFailureProgramStartupDirectoryCommand}" Margin="5,5,0,5"/>
                        <TextBlock Grid.Row="8"  Grid.Column="1" Grid.ColumnSpan="2" Text="{x:Static resx:Strings.Info_FailureProgramStartupDirectory}" FontStyle="Normal" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" TextWrapping="Wrap"/>

                        <!-- Process Parameters -->
                        <TextBlock Grid.Row="9" Grid.Column="0" Text="{x:Static resx:Strings.Label_ProcessParameters}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="9" Grid.Column="1" Text="{Binding FailureProgramParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5" Grid.ColumnSpan="2"/>
                        <TextBlock Grid.Row="10" Grid.Column="1" Grid.ColumnSpan="2"
                             Text="{x:Static resx:Strings.Info_ProcessParameters}" 
                             FontStyle="Normal" 
                             Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                             TextWrapping="Wrap"/>
                    </Grid>
                </TabItem>

                <!-- Advanced tab UI -->
                <TabItem Header="{x:Static resx:Strings.Label_AdvancedTab}">
                    <Grid Margin="20" HorizontalAlignment="Center" VerticalAlignment="Top" MinHeight="470">
                        <Grid.RowDefinitions>
                            <!-- Env Label -->
                            <RowDefinition Height="Auto"/>
                            <!-- Env Text -->
                            <RowDefinition Height="Auto"/>
                            <!-- Env Info -->
                            <RowDefinition Height="Auto"/>
                            <!-- Dep Label -->
                            <RowDefinition Height="Auto"/>
                            <!-- Dep Text -->
                            <RowDefinition Height="Auto"/>
                            <!-- Dep Info -->
                            <RowDefinition Height="Auto"/>

                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="300"/>
                            <ColumnDefinition Width="100"/>
                        </Grid.ColumnDefinitions>

                        <!-- Environment Variables -->
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static resx:Strings.Label_EnvironmentVariables}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding EnvironmentVariables, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5" Grid.ColumnSpan="2" 
                                 AcceptsReturn="True" VerticalScrollBarVisibility="Auto" Height="120" />
                        <TextBlock Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"
                                Text="{x:Static resx:Strings.Info_EnvironmentVariables}" 
                                FontStyle="Normal" 
                                Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                                TextWrapping="Wrap"/>

                        <!-- Service Dependencies -->
                        <TextBlock Grid.Row="3" Grid.Column="0" Text="{x:Static resx:Strings.Label_ServiceDependencies}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding ServiceDependencies, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                 Margin="0,5" Grid.ColumnSpan="2" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" Height="120" />
                        <TextBlock Grid.Row="4"  Grid.Column="1" Grid.ColumnSpan="2" 
                                   Text="{x:Static resx:Strings.Info_ServiceDependencies}" FontStyle="Normal" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" 
                                   TextWrapping="Wrap"/>

                    </Grid>
                </TabItem>

                <!-- Log On tab UI -->
                <TabItem Header="{x:Static resx:Strings.Label_LogOnTab}">
                    <Grid Margin="20" HorizontalAlignment="Center" VerticalAlignment="Top" MinHeight="470">
                        <Grid.RowDefinitions>
                            <!-- Run As Local System RadioButton -->
                            <RowDefinition Height="Auto"/>
                            <!-- User Account RadioButton -->
                            <RowDefinition Height="Auto"/>
                            <!-- User Account Info TextBlock -->
                            <RowDefinition Height="Auto"/>
                            <!-- Password Label + PasswordBox -->
                            <RowDefinition Height="Auto"/>
                            <!-- Confirm Password Label + PasswordBox -->
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="150"/>
                            <ColumnDefinition Width="250"/>
                        </Grid.ColumnDefinitions>

                        <!-- Run As Local System (spans both columns) -->
                        <RadioButton Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,0,0,10"
                                     Content="{x:Static resx:Strings.Label_RunAsLocalSystem}" 
                                     IsChecked="{Binding RunAsLocalSystem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                        <!-- User Account RadioButton label in first column -->
                        <RadioButton Grid.Row="1" Grid.Column="0"
                                     Content="{x:Static resx:Strings.Label_UserAccount}"
                                     IsChecked="{Binding RunAsLocalSystem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InverseBooleanConverter}}" />

                        <!-- User Account TextBox in second column -->
                        <TextBox Grid.Row="1" Grid.Column="1" 
                                 Text="{Binding UserAccount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                 Margin="0,0,0,5"
                                 IsEnabled="{Binding RunAsLocalSystem, Converter={StaticResource InverseBooleanConverter}}" />

                        <!-- User Account Info TextBlock spanning both columns -->
                        <TextBlock Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
                                   Text="{x:Static resx:Strings.Info_UserAccount}" 
                                   FontStyle="Normal" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" TextWrapping="Wrap" Margin="0,0,0,10"/>

                        <!-- Password Label in first column -->
                        <TextBlock Grid.Row="3" Grid.Column="0" 
                                   Text="{x:Static resx:Strings.Label_Password}" Margin="0,5,10,5" VerticalAlignment="Center"/>

                        <!-- PasswordBox in second column -->
                        <PasswordBox Grid.Row="3" Grid.Column="1"
                                     Margin="0,0,0,10"
                                     IsEnabled="{Binding RunAsLocalSystem, Converter={StaticResource InverseBooleanConverter}}"
                                     helpers:PasswordBoxHelper.BoundPassword="{Binding Password, Mode=TwoWay}" />

                        <!-- Confirm Password Label in first column -->
                        <TextBlock Grid.Row="4" Grid.Column="0" 
                                   Text="{x:Static resx:Strings.Label_ConfirmPassword}" Margin="0,5,10,5" VerticalAlignment="Center"/>

                        <!-- Confirm PasswordBox in second column -->
                        <PasswordBox Grid.Row="4" Grid.Column="1"
                                     Margin="0,0,0,10"
                                     IsEnabled="{Binding RunAsLocalSystem, Converter={StaticResource InverseBooleanConverter}}"
                                     helpers:PasswordBoxHelper.BoundPassword="{Binding ConfirmPassword, Mode=TwoWay}" />
                    </Grid>
                </TabItem>

                <!-- Pre-Launch tab UI -->
                <TabItem Header="{x:Static resx:Strings.Label_PreLaunchTab}" >
                    <Grid Margin="20" HorizontalAlignment="Center" VerticalAlignment="Top" MinHeight="470">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="300"/>
                            <ColumnDefinition Width="100"/>
                        </Grid.ColumnDefinitions>

                        <!-- Info -->
                        <TextBlock Grid.Row="0"  Grid.Column="1" Grid.ColumnSpan="3" Text="{x:Static resx:Strings.Info_PreLaunch}" FontStyle="Normal" Foreground="Black" TextWrapping="Wrap" Margin="5,0,0,5"/>

                        <!-- Process Path -->
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static resx:Strings.Label_PreLaunchProcessPath}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding PreLaunchExecutablePath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5"/>
                        <Button Grid.Row="1" Grid.Column="2" Content="{x:Static resx:Strings.Button_Browse}" Command="{Binding BrowsePreLaunchProcessPathCommand}" Margin="5,5,0,5"/>

                        <!-- Startup Directory -->
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static resx:Strings.Label_StartupDirectory}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding PreLaunchStartupDirectory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5"/>
                        <Button Grid.Row="2" Grid.Column="2" Content="{x:Static resx:Strings.Button_Browse}" Command="{Binding BrowsePreLaunchStartupDirectoryCommand}" Margin="5,5,0,5"/>
                        <TextBlock Grid.Row="3"  Grid.Column="1" Grid.ColumnSpan="2" Text="{x:Static resx:Strings.Info_PreLaunchStartupDirectory}" FontStyle="Normal" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" TextWrapping="Wrap"/>

                        <!-- Process Parameters -->
                        <TextBlock Grid.Row="4" Grid.Column="0" Text="{x:Static resx:Strings.Label_ProcessParameters}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding PreLaunchParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5" Grid.ColumnSpan="2"/>
                        <TextBlock Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2"
                             Text="{x:Static resx:Strings.Info_ProcessParameters}" 
                             FontStyle="Normal" 
                             Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                             TextWrapping="Wrap"/>

                        <!-- Environment Variables -->
                        <TextBlock Grid.Row="6" Grid.Column="0" Text="{x:Static resx:Strings.Label_EnvironmentVariables}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="6" Grid.Column="1" Text="{Binding PreLaunchEnvironmentVariables, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5" Grid.ColumnSpan="2" 
                                 AcceptsReturn="True" VerticalScrollBarVisibility="Auto" Height="100" />
                        <TextBlock Grid.Row="7"  Grid.Column="1" Grid.ColumnSpan="2" Text="{x:Static resx:Strings.Info_EnvironmentVariables}" FontStyle="Normal" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" TextWrapping="Wrap"/>

                        <!-- Stdout Path -->
                        <TextBlock Grid.Row="8" Grid.Column="0" Text="{x:Static resx:Strings.Label_StdoutPath}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="8" Grid.Column="1" Text="{Binding PreLaunchStdoutPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5"/>
                        <Button Grid.Row="8" Grid.Column="2" Content="{x:Static resx:Strings.Button_Browse}" Command="{Binding BrowsePreLaunchStdoutPathCommand}" Margin="5,5,0,5"/>

                        <!-- Stderr Path -->
                        <TextBlock Grid.Row="9" Grid.Column="0" Text="{x:Static resx:Strings.Label_StderrPath}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="9" Grid.Column="1" Text="{Binding PreLaunchStderrPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5"/>
                        <Button Grid.Row="9" Grid.Column="2" Content="{x:Static resx:Strings.Button_Browse}" Command="{Binding BrowsePreLaunchStderrPathCommand}" Margin="5,5,0,5"/>

                        <!-- Timeout -->
                        <TextBlock Grid.Row="10" Grid.Column="0" Text="{x:Static resx:Strings.Label_PreLaunchTimeoutSeconds}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="10" Grid.Column="1" Text="{Binding PreLaunchTimeoutSeconds, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5" Grid.ColumnSpan="2"/>

                        <!-- Retry Attempts -->
                        <TextBlock Grid.Row="11" Grid.Column="0" Text="{x:Static resx:Strings.Label_PreLaunchRetryAttempts}" Margin="0,5,10,5"/>
                        <TextBox Grid.Row="11" Grid.Column="1" Text="{Binding PreLaunchRetryAttempts, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5" Grid.ColumnSpan="2"/>

                        <!-- Ignore Failure -->
                        <CheckBox Grid.Row="12" Grid.Column="1"
                          Content="{x:Static resx:Strings.Label_PreLaunchIgnoreFailure}"
                          IsChecked="{Binding PreLaunchIgnoreFailure, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Margin="0,5" />

                    </Grid>
                </TabItem>

            </TabControl>

            <!-- Bottom Buttons Row -->
            <Grid Grid.Row="1" Margin="0,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <!-- Left side for note -->
                    <ColumnDefinition Width="Auto"/>
                    <!-- Buttons -->
                </Grid.ColumnDefinitions>

                <!-- Footer Note -->
                <TextBlock Grid.Column="0"
                           Text="{x:Static resx:Strings.Label_RequiredFields}"
                           FontStyle="Normal"
                           Foreground="Gray"
                           VerticalAlignment="Center"
                           Margin="10,0,0,0"/>

                <!-- Buttons -->
                <UniformGrid Grid.Column="1" Rows="1" Columns="5" Margin="0,0,10,0">
                    <Button Content="{x:Static resx:Strings.Button_Install}" Width="80" Margin="5" Command="{Binding InstallCommand}" />
                    <Button Content="{x:Static resx:Strings.Button_Uninstall}" Width="80" Margin="5" Command="{Binding UninstallCommand}"/>
                    <Button Content="{x:Static resx:Strings.Button_Start}" Width="80" Margin="5" Command="{Binding StartCommand}"/>
                    <Button Content="{x:Static resx:Strings.Button_Stop}" Width="80" Margin="5" Command="{Binding StopCommand}"/>
                    <Button Content="{x:Static resx:Strings.Button_Restart}" Width="80" Margin="5" Command="{Binding RestartCommand}"/>
                </UniformGrid>
            </Grid>

        </Grid>

    </DockPanel>
</Window>
