//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Servy.Resources {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Servy.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Browse.
        /// </summary>
        public static string Button_Browse {
            get {
                return ResourceManager.GetString("Button_Browse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Install.
        /// </summary>
        public static string Button_Install {
            get {
                return ResourceManager.GetString("Button_Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Restart.
        /// </summary>
        public static string Button_Restart {
            get {
                return ResourceManager.GetString("Button_Restart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Start.
        /// </summary>
        public static string Button_Start {
            get {
                return ResourceManager.GetString("Button_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Stop.
        /// </summary>
        public static string Button_Stop {
            get {
                return ResourceManager.GetString("Button_Stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Uninstall.
        /// </summary>
        public static string Button_Uninstall {
            get {
                return ResourceManager.GetString("Button_Uninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable Heartbeat Check.
        /// </summary>
        public static string Chk_EnableHeartbeat {
            get {
                return ResourceManager.GetString("Chk_EnableHeartbeat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Are you sure you want to clear all configuration values?.
        /// </summary>
        public static string Confirm_ClearAll {
            get {
                return ResourceManager.GetString("Confirm_ClearAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à JSON Configuration exported successfully..
        /// </summary>
        public static string ExportJson_Success {
            get {
                return ResourceManager.GetString("ExportJson_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à XML Configuration exported successfully..
        /// </summary>
        public static string ExportXml_Success {
            get {
                return ResourceManager.GetString("ExportXml_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enter variables in the format varName=varValue, one per line or separated by semicolons (;). Use \= to escape &apos;=&apos; and \; to escape &apos;;&apos;. To include a literal backslash before &apos;=&apos;, &apos;;&apos;, or at the end of a line, use double backslashes (\\).
        ///Supports environment variable expansion. Example:
        ///MY_VAR1=%ProgramData%\MyApp; MY_VAR2=%MY_VAR1%\bin
        ///    .
        /// </summary>
        public static string Info_EnvironmentVariables {
            get {
                return ResourceManager.GetString("Info_EnvironmentVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Configure an optional script or executable to run before the main service starts. This is useful for preparing configurations, fetching secrets, or other setup tasks. If the pre-launch script fails, the service will not start unless you enable &quot;Ignore Failure&quot;..
        /// </summary>
        public static string Info_PreLaunch {
            get {
                return ResourceManager.GetString("Info_PreLaunch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Optional. Defaults to the service working directory..
        /// </summary>
        public static string Info_PreLaunchStartupDirectory {
            get {
                return ResourceManager.GetString("Info_PreLaunchStartupDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Process parameters support environment variable expansion. Example:
        ///--param=&quot;%ProgramData%\MyApp&quot; --param=&quot;%MY_VAR%\bin&quot;.
        /// </summary>
        public static string Info_ProcessParameters {
            get {
                return ResourceManager.GetString("Info_ProcessParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Specify one or more Windows service names (not display names) that this service depends on. Enter each service name on a new line or separate them with semicolons (;). Use service key names without spaces or special characters. Each dependency service must be installed and running before this service can start. If a dependency&apos;s start type is Automatic, Windows will try to start it automatically before this service. If a dependency fails to start or is disabled, this service will not start..
        /// </summary>
        public static string Info_ServiceDependencies {
            get {
                return ResourceManager.GetString("Info_ServiceDependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The service account username (e.g., .\username, DOMAIN\username)..
        /// </summary>
        public static string Info_UserAccount {
            get {
                return ResourceManager.GetString("Info_UserAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Advanced.
        /// </summary>
        public static string Label_AdvancedTab {
            get {
                return ResourceManager.GetString("Label_AdvancedTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à attempts.
        /// </summary>
        public static string Label_Attempts {
            get {
                return ResourceManager.GetString("Label_Attempts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Confirm Password.
        /// </summary>
        public static string Label_ConfirmPassword {
            get {
                return ResourceManager.GetString("Label_ConfirmPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable Health Monitoring.
        /// </summary>
        public static string Label_EnableHealthMonitoring {
            get {
                return ResourceManager.GetString("Label_EnableHealthMonitoring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable File Rotation.
        /// </summary>
        public static string Label_EnableRotation {
            get {
                return ResourceManager.GetString("Label_EnableRotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Environment Variables.
        /// </summary>
        public static string Label_EnvironmentVariables {
            get {
                return ResourceManager.GetString("Label_EnvironmentVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Heartbeat Interval.
        /// </summary>
        public static string Label_HeartbeatInterval {
            get {
                return ResourceManager.GetString("Label_HeartbeatInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Log On.
        /// </summary>
        public static string Label_LogOnTab {
            get {
                return ResourceManager.GetString("Label_LogOnTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Main.
        /// </summary>
        public static string Label_MainTab {
            get {
                return ResourceManager.GetString("Label_MainTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Max Failed Checks.
        /// </summary>
        public static string Label_MaxFailedChecks {
            get {
                return ResourceManager.GetString("Label_MaxFailedChecks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Max Restart Attempts.
        /// </summary>
        public static string Label_MaxRestartAttempts {
            get {
                return ResourceManager.GetString("Label_MaxRestartAttempts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Password.
        /// </summary>
        public static string Label_Password {
            get {
                return ResourceManager.GetString("Label_Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Ignore Failure.
        /// </summary>
        public static string Label_PreLaunchIgnoreFailure {
            get {
                return ResourceManager.GetString("Label_PreLaunchIgnoreFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Process Path.
        /// </summary>
        public static string Label_PreLaunchProcessPath {
            get {
                return ResourceManager.GetString("Label_PreLaunchProcessPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Retry Attempts.
        /// </summary>
        public static string Label_PreLaunchRetryAttempts {
            get {
                return ResourceManager.GetString("Label_PreLaunchRetryAttempts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Pre-Launch.
        /// </summary>
        public static string Label_PreLaunchTab {
            get {
                return ResourceManager.GetString("Label_PreLaunchTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Timeout.
        /// </summary>
        public static string Label_PreLaunchTimeoutSeconds {
            get {
                return ResourceManager.GetString("Label_PreLaunchTimeoutSeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Process Parameters.
        /// </summary>
        public static string Label_ProcessParameters {
            get {
                return ResourceManager.GetString("Label_ProcessParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Process Path *.
        /// </summary>
        public static string Label_ProcessPath {
            get {
                return ResourceManager.GetString("Label_ProcessPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Process Priority.
        /// </summary>
        public static string Label_ProcessPriority {
            get {
                return ResourceManager.GetString("Label_ProcessPriority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Recovery Action.
        /// </summary>
        public static string Label_RecoveryAction {
            get {
                return ResourceManager.GetString("Label_RecoveryAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * Required fields.
        /// </summary>
        public static string Label_RequiredFields {
            get {
                return ResourceManager.GetString("Label_RequiredFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Rotation Size.
        /// </summary>
        public static string Label_RotationSize {
            get {
                return ResourceManager.GetString("Label_RotationSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à bytes.
        /// </summary>
        public static string Label_RotationSizeUnity {
            get {
                return ResourceManager.GetString("Label_RotationSizeUnity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Run As Local System.
        /// </summary>
        public static string Label_RunAsLocalSystem {
            get {
                return ResourceManager.GetString("Label_RunAsLocalSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à seconds.
        /// </summary>
        public static string Label_Seconds {
            get {
                return ResourceManager.GetString("Label_Seconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Service Dependencies.
        /// </summary>
        public static string Label_ServiceDependencies {
            get {
                return ResourceManager.GetString("Label_ServiceDependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Service Description.
        /// </summary>
        public static string Label_ServiceDescription {
            get {
                return ResourceManager.GetString("Label_ServiceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Service Name *.
        /// </summary>
        public static string Label_ServiceName {
            get {
                return ResourceManager.GetString("Label_ServiceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Startup Directory.
        /// </summary>
        public static string Label_StartupDirectory {
            get {
                return ResourceManager.GetString("Label_StartupDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Startup Type.
        /// </summary>
        public static string Label_StartupType {
            get {
                return ResourceManager.GetString("Label_StartupType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Stderr File Path.
        /// </summary>
        public static string Label_StderrPath {
            get {
                return ResourceManager.GetString("Label_StderrPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Stdout File Path.
        /// </summary>
        public static string Label_StdoutPath {
            get {
                return ResourceManager.GetString("Label_StdoutPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User Account.
        /// </summary>
        public static string Label_UserAccount {
            get {
                return ResourceManager.GetString("Label_UserAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à About Servy.
        /// </summary>
        public static string Menu_About {
            get {
                return ResourceManager.GetString("Menu_About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Check for updates....
        /// </summary>
        public static string Menu_CheckUpdates {
            get {
                return ResourceManager.GetString("Menu_CheckUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Clear All.
        /// </summary>
        public static string Menu_ClearAll {
            get {
                return ResourceManager.GetString("Menu_ClearAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Help / Documentation.
        /// </summary>
        public static string Menu_Doc {
            get {
                return ResourceManager.GetString("Menu_Doc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Export.
        /// </summary>
        public static string Menu_Export {
            get {
                return ResourceManager.GetString("Menu_Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Export JSON configuration.
        /// </summary>
        public static string Menu_ExportJson {
            get {
                return ResourceManager.GetString("Menu_ExportJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Export XML configuration.
        /// </summary>
        public static string Menu_ExportXml {
            get {
                return ResourceManager.GetString("Menu_ExportXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Help.
        /// </summary>
        public static string Menu_Help {
            get {
                return ResourceManager.GetString("Menu_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Import.
        /// </summary>
        public static string Menu_Import {
            get {
                return ResourceManager.GetString("Menu_Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Import JSON configuration.
        /// </summary>
        public static string Menu_ImportJson {
            get {
                return ResourceManager.GetString("Menu_ImportJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Import XML configuration.
        /// </summary>
        public static string Menu_ImportXml {
            get {
                return ResourceManager.GetString("Menu_ImportXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Manager.
        /// </summary>
        public static string Menu_Manager {
            get {
                return ResourceManager.GetString("Menu_Manager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Administrator privileges are required..
        /// </summary>
        public static string Msg_AdminRightsRequired {
            get {
                return ResourceManager.GetString("Msg_AdminRightsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed to load JSON service configuration..
        /// </summary>
        public static string Msg_FailedToLoadJson {
            get {
                return ResourceManager.GetString("Msg_FailedToLoadJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed to load XML service configuration..
        /// </summary>
        public static string Msg_FailedToLoadXml {
            get {
                return ResourceManager.GetString("Msg_FailedToLoadXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This field is required..
        /// </summary>
        public static string Msg_FieldRequired {
            get {
                return ResourceManager.GetString("Msg_FieldRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Heartbeat interval must be a number of seconds greater than or equal to 5 seconds..
        /// </summary>
        public static string Msg_InvalidHeartbeatInterval {
            get {
                return ResourceManager.GetString("Msg_InvalidHeartbeatInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Max Failed Checks must be a number greater than or equal to 1..
        /// </summary>
        public static string Msg_InvalidMaxFailedChecks {
            get {
                return ResourceManager.GetString("Msg_InvalidMaxFailedChecks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Max Restart Attempts must be a number greater than or equal to 1..
        /// </summary>
        public static string Msg_InvalidMaxRestartAttempts {
            get {
                return ResourceManager.GetString("Msg_InvalidMaxRestartAttempts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The specified process path is invalid..
        /// </summary>
        public static string Msg_InvalidPath {
            get {
                return ResourceManager.GetString("Msg_InvalidPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The pre-launch process path is invalid..
        /// </summary>
        public static string Msg_InvalidPreLaunchPath {
            get {
                return ResourceManager.GetString("Msg_InvalidPreLaunchPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Pre-Launch retry attempts must be a number greater than or equal to 0..
        /// </summary>
        public static string Msg_InvalidPreLaunchRetryAttempts {
            get {
                return ResourceManager.GetString("Msg_InvalidPreLaunchRetryAttempts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The specified pre-launch startup directory is invalid..
        /// </summary>
        public static string Msg_InvalidPreLaunchStartupDirectory {
            get {
                return ResourceManager.GetString("Msg_InvalidPreLaunchStartupDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The specified pre-launch stderr file path is invalid..
        /// </summary>
        public static string Msg_InvalidPreLaunchStderrPath {
            get {
                return ResourceManager.GetString("Msg_InvalidPreLaunchStderrPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The specified pre-launch stdout file path is invalid..
        /// </summary>
        public static string Msg_InvalidPreLaunchStdoutPath {
            get {
                return ResourceManager.GetString("Msg_InvalidPreLaunchStdoutPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Pre-Launch timeout must be a number of seconds greater than or equal to 5 seconds..
        /// </summary>
        public static string Msg_InvalidPreLaunchTimeout {
            get {
                return ResourceManager.GetString("Msg_InvalidPreLaunchTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Rotation size must be a number of bytes greater than or equal to 1 MB (1,048,576 bytes)..
        /// </summary>
        public static string Msg_InvalidRotationSize {
            get {
                return ResourceManager.GetString("Msg_InvalidRotationSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The specified startup directory is invalid..
        /// </summary>
        public static string Msg_InvalidStartupDirectory {
            get {
                return ResourceManager.GetString("Msg_InvalidStartupDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The specified stderr file path is invalid..
        /// </summary>
        public static string Msg_InvalidStderrPath {
            get {
                return ResourceManager.GetString("Msg_InvalidStderrPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The specified stdout file path is invalid..
        /// </summary>
        public static string Msg_InvalidStdoutPath {
            get {
                return ResourceManager.GetString("Msg_InvalidStdoutPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Invalid value..
        /// </summary>
        public static string Msg_InvalidValue {
            get {
                return ResourceManager.GetString("Msg_InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Service wrapper executable not found..
        /// </summary>
        public static string Msg_InvalidWrapperExePath {
            get {
                return ResourceManager.GetString("Msg_InvalidWrapperExePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Servy Manager App not found..
        /// </summary>
        public static string Msg_ManagerAppNotFound {
            get {
                return ResourceManager.GetString("Msg_ManagerAppNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Passwords don&apos;t match..
        /// </summary>
        public static string Msg_PasswordsDontMatch {
            get {
                return ResourceManager.GetString("Msg_PasswordsDontMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Service was created successfully..
        /// </summary>
        public static string Msg_ServiceCreated {
            get {
                return ResourceManager.GetString("Msg_ServiceCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Service was removed successfully..
        /// </summary>
        public static string Msg_ServiceRemoved {
            get {
                return ResourceManager.GetString("Msg_ServiceRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Service was restarted successfully..
        /// </summary>
        public static string Msg_ServiceRestarted {
            get {
                return ResourceManager.GetString("Msg_ServiceRestarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Service was started successfully..
        /// </summary>
        public static string Msg_ServiceStarted {
            get {
                return ResourceManager.GetString("Msg_ServiceStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Service was stopped successfully..
        /// </summary>
        public static string Msg_ServiceStopped {
            get {
                return ResourceManager.GetString("Msg_ServiceStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An unexpected error occurred..
        /// </summary>
        public static string Msg_UnexpectedError {
            get {
                return ResourceManager.GetString("Msg_UnexpectedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please fill in all required fields..
        /// </summary>
        public static string Msg_ValidationError {
            get {
                return ResourceManager.GetString("Msg_ValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Above Normal.
        /// </summary>
        public static string ProcessPriority_AboveNormal {
            get {
                return ResourceManager.GetString("ProcessPriority_AboveNormal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Below Normal.
        /// </summary>
        public static string ProcessPriority_BelowNormal {
            get {
                return ResourceManager.GetString("ProcessPriority_BelowNormal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à High.
        /// </summary>
        public static string ProcessPriority_High {
            get {
                return ResourceManager.GetString("ProcessPriority_High", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Idle.
        /// </summary>
        public static string ProcessPriority_Idle {
            get {
                return ResourceManager.GetString("ProcessPriority_Idle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Normal (default).
        /// </summary>
        public static string ProcessPriority_Normal {
            get {
                return ResourceManager.GetString("ProcessPriority_Normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Real Time (use with caution).
        /// </summary>
        public static string ProcessPriority_RealTime {
            get {
                return ResourceManager.GetString("ProcessPriority_RealTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à None.
        /// </summary>
        public static string RecoveryAction_None {
            get {
                return ResourceManager.GetString("RecoveryAction_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Restart Computer.
        /// </summary>
        public static string RecoveryAction_RestartComputer {
            get {
                return ResourceManager.GetString("RecoveryAction_RestartComputer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Restart Process.
        /// </summary>
        public static string RecoveryAction_RestartProcess {
            get {
                return ResourceManager.GetString("RecoveryAction_RestartProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Restart Service (default).
        /// </summary>
        public static string RecoveryAction_RestartService {
            get {
                return ResourceManager.GetString("RecoveryAction_RestartService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Export JSON configuration.
        /// </summary>
        public static string SaveFileDialog_JsonTitle {
            get {
                return ResourceManager.GetString("SaveFileDialog_JsonTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Export XML configuration.
        /// </summary>
        public static string SaveFileDialog_XmlTitle {
            get {
                return ResourceManager.GetString("SaveFileDialog_XmlTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Loading Servy....
        /// </summary>
        public static string Splash_Text {
            get {
                return ResourceManager.GetString("Splash_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Automatic (default).
        /// </summary>
        public static string StartupType_Automatic {
            get {
                return ResourceManager.GetString("StartupType_Automatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disabled.
        /// </summary>
        public static string StartupType_Disabled {
            get {
                return ResourceManager.GetString("StartupType_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Manual.
        /// </summary>
        public static string StartupType_Manual {
            get {
                return ResourceManager.GetString("StartupType_Manual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 
        ///Servy 1.0
        ///
        ///Servy is a lightweight tool that allows you to run and manage any application as a Windows service.
        ///
        ///Easily monitor service health, configure startup options, and automate recovery actions.
        ///
        ///Built with .NET Framework 4.8
        ///
        ///Copyright © 2025 Akram El Assas. All rights reserved.
        ///  .
        /// </summary>
        public static string Text_About {
            get {
                return ResourceManager.GetString("Text_About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No updates currently available..
        /// </summary>
        public static string Text_NoUpdate {
            get {
                return ResourceManager.GetString("Text_NoUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A new version of Servy is available. Do you want to download it?.
        /// </summary>
        public static string Text_UpdateAvailable {
            get {
                return ResourceManager.GetString("Text_UpdateAvailable", resourceCulture);
            }
        }
    }
}
