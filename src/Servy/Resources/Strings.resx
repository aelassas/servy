<?xml version="1.0" encoding="utf-8"?>
<root>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms</value>
  </resheader>

  <!--Splash screen-->
  <data name="Splash_Text" xml:space="preserve">
    <value>Loading Servy...</value>
  </data>

  <!-- Menus -->
  <data name="Menu_Import" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="Menu_ImportXml" xml:space="preserve">
    <value>Import XML configuration</value>
  </data>
  <data name="Menu_ImportJson" xml:space="preserve">
    <value>Import JSON configuration</value>
  </data>
  <data name="Menu_Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="Menu_ExportXml" xml:space="preserve">
    <value>Export XML configuration</value>
  </data>
  <data name="Menu_ExportJson" xml:space="preserve">
    <value>Export JSON configuration</value>
  </data>

  <data name="Menu_Manager" xml:space="preserve">
    <value>Manager</value>
  </data>

  <data name="Menu_Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="Menu_Doc" xml:space="preserve">
    <value>Help / Documentation</value>
  </data>
  <data name="Menu_CheckUpdates" xml:space="preserve">
    <value>Check for updates...</value>
  </data>
  <data name="Menu_About" xml:space="preserve">
    <value>About Servy</value>
  </data>

  <data name="Text_NoUpdate" xml:space="preserve">
    <value>No updates currently available.</value>
  </data>
  <data name="Text_UpdateAvailable" xml:space="preserve">
    <value>A new version of Servy is available. Do you want to download it?</value>
  </data>

  <data name="Text_About" xml:space="preserve">
  <value>
Servy {0}

Servy is a lightweight tool that allows you to run and manage any application as a Windows service.

Easily monitor service health, configure startup options, and automate recovery actions.

Built with .NET Framework 4.8

Copyright © 2025 Akram El Assas. All rights reserved.
  </value>
</data>

  <!-- Tabs -->
  <data name="Label_MainTab" xml:space="preserve">
    <value>Main</value>
  </data>
  <data name="Label_RecoveryTab" xml:space="preserve">
    <value>Recovery</value>
  </data>
  <data name="Label_AdvancedTab" xml:space="preserve">
    <value>Advanced</value>
  </data>
  <data name="Label_LogOnTab" xml:space="preserve">
    <value>Log On</value>
  </data>
  <data name="Label_PreLaunchTab" xml:space="preserve">
    <value>Pre-Launch</value>
  </data>

  <!-- Labels -->
  <data name="Label_ServiceName" xml:space="preserve">
    <value>Service Name *</value>
  </data>
  <data name="Label_ServiceDescription" xml:space="preserve">
    <value>Service Description</value>
  </data>
  <data name="Label_ProcessPath" xml:space="preserve">
    <value>Process Path *</value>
  </data>
  <data name="Label_StartupDirectory" xml:space="preserve">
    <value>Startup Directory</value>
  </data>
  <data name="Label_ProcessParameters" xml:space="preserve">
    <value>Process Parameters</value>
  </data>
  <data name="Info_ProcessParameters" xml:space="preserve">
    <value>Process parameters support environment variable expansion. Example:
--param="%ProgramData%\MyApp" --param="%MY_VAR%\bin"</value>
  </data>
  <data name="Label_RequiredFields" xml:space="preserve">
    <value>* Required fields</value>
  </data>

  <!-- Startup Type ComboBox Items -->
  <data name="Label_StartupType" xml:space="preserve">
    <value>Startup Type</value>
  </data>
  <data name="StartupType_Automatic" xml:space="preserve">
    <value>Automatic (default)</value>
  </data>
  <data name="StartupType_Manual" xml:space="preserve">
    <value>Manual</value>
  </data>
  <data name="StartupType_Disabled" xml:space="preserve">
    <value>Disabled</value>
  </data>

  <!-- Process Priority ComboBox Items -->
  <data name="Label_ProcessPriority" xml:space="preserve">
    <value>Process Priority</value>
  </data>
  <data name="ProcessPriority_Idle" xml:space="preserve">
    <value>Idle</value>
  </data>
  <data name="ProcessPriority_BelowNormal" xml:space="preserve">
    <value>Below Normal</value>
  </data>
  <data name="ProcessPriority_Normal" xml:space="preserve">
    <value>Normal (default)</value>
  </data>
  <data name="ProcessPriority_AboveNormal" xml:space="preserve">
    <value>Above Normal</value>
  </data>
  <data name="ProcessPriority_High" xml:space="preserve">
    <value>High</value>
  </data>
  <data name="ProcessPriority_RealTime" xml:space="preserve">
    <value>Real Time (use with caution)</value>
  </data>

  <!-- I/O redirection -->
  <data name="Label_StdoutPath" xml:space="preserve">
    <value>Stdout File Path</value>
  </data>
  <data name="Label_StderrPath" xml:space="preserve">
    <value>Stderr File Path</value>
  </data>
  <data name="Label_EnableRotation" xml:space="preserve">
    <value>Enable File Rotation</value>
  </data>
  <data name="Label_RotationSize" xml:space="preserve">
    <value>Rotation Size</value>
  </data>
  <data name="Label_RotationSizeUnity" xml:space="preserve">
    <value>Megabytes (MB)</value>
  </data>

  <!-- Health monitoring -->
  <data name="Label_EnableHealthMonitoring" xml:space="preserve">
    <value>Enable Health Monitoring</value>
  </data>
  <data name="Chk_EnableHeartbeat" xml:space="preserve">
    <value>Enable Heartbeat Check</value>
  </data>
  <data name="Label_HeartbeatInterval" xml:space="preserve">
    <value>Heartbeat Interval</value>
  </data>
  <data name="Label_Seconds" xml:space="preserve">
    <value>seconds</value>
  </data>
  <data name="Label_MaxFailedChecks" xml:space="preserve">
    <value>Max Failed Checks</value>
  </data>
  <data name="Label_Attempts" xml:space="preserve">
    <value>attempts</value>
  </data>
  <data name="Label_RecoveryAction" xml:space="preserve">
    <value>Recovery Action</value>
  </data>
  <data name="RecoveryAction_None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="RecoveryAction_RestartService" xml:space="preserve">
    <value>Restart Service (default)</value>
  </data>
  <data name="RecoveryAction_RestartProcess" xml:space="preserve">
    <value>Restart Process</value>
  </data>
  <data name="RecoveryAction_RestartComputer" xml:space="preserve">
    <value>Restart Computer</value>
  </data>
  <data name="Label_MaxRestartAttempts" xml:space="preserve">
    <value>Max Restart Attempts</value>
  </data>

  <data name="Info_FailureProgram" xml:space="preserve">
    <value>Run a Program on Failure. If health checks are disabled, the program will run when the process fails to start. If health checks are enabled, the program will only run after all configured recovery action retries have failed.</value>
  </data>
  <data name="Info_FailureProgramStartupDirectory" xml:space="preserve">
    <value>Optional. Defaults to the failure program directory.</value>
  </data>
  <data name="Msg_InvalidFailureProgramPath" xml:space="preserve">
    <value>The failure program path is invalid.</value>
  </data>
  <data name="Msg_InvalidFailureProgramStartupDirectory" xml:space="preserve">
    <value>The specified failure program startup directory is invalid.</value>
  </data>

  <!-- Environment Variables -->
  <data name="Label_EnvironmentVariables" xml:space="preserve">
    <value>Environment Variables</value>
  </data>
  <data name="Info_EnvironmentVariables" xml:space="preserve">
    <value>Enter variables in the format varName=varValue, one per line or separated by semicolons (;). Use \= to escape '=', \" to escape '"', \; to escape ';' and \\ to escape '\'. Supports environment variable expansion, example: VAR1=%ProgramData%\MyApp; VAR2=%VAR1%\bin</value>
  </data>

  <!-- Service Dependencies -->
  <data name="Label_ServiceDependencies" xml:space="preserve">
    <value>Service Dependencies</value>
  </data>
  <data name="Info_ServiceDependencies" xml:space="preserve">
    <value>Specify one or more Windows service names (not display names) that this service depends on. Enter each service name on a new line or separate them with semicolons (;). Use service key names without spaces or special characters. Each dependency service must be installed and running before this service can start. If a dependency's start type is Automatic, Windows will try to start it automatically before this service. If a dependency fails to start or is disabled, this service will not start.</value>
  </data>

  <!-- User Account -->
  <data name="Label_RunAsLocalSystem" xml:space="preserve">
    <value>Run As Local System</value>
  </data>
  <data name="Label_UserAccount" xml:space="preserve">
    <value>User Account</value>
  </data>
  <data name="Info_UserAccount" xml:space="preserve">
    <value>The service account username (e.g., .\username, DOMAIN\username, or DOMAIN\gMSA$ for Group Managed Service Accounts).</value>
  </data>
  <data name="Label_Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Label_ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="Msg_PasswordsDontMatch" xml:space="preserve">
    <value>Passwords don&apos;t match.</value>
  </data>

  <!-- Pre-Launch -->
  <data name="Info_PreLaunch" xml:space="preserve">
    <value>Configure an optional script or executable to run before the main service starts. This is useful for preparing configurations, fetching secrets, or other setup tasks. If the pre-launch script fails, the service will not start unless you enable "Ignore Failure".</value>
  </data>
  <data name="Label_PreLaunchProcessPath" xml:space="preserve">
    <value>Process Path</value>
  </data>
  <data name="Info_PreLaunchStartupDirectory" xml:space="preserve">
    <value>Optional. Defaults to the service working directory.</value>
  </data>
  <data name="Label_PreLaunchTimeoutSeconds" xml:space="preserve">
    <value>Timeout</value>
  </data>
  <data name="Label_PreLaunchRetryAttempts" xml:space="preserve">
    <value>Retry Attempts</value>
  </data>
  <data name="Label_PreLaunchIgnoreFailure" xml:space="preserve">
    <value>Ignore Failure</value>
  </data>
  <data name="Msg_InvalidPreLaunchPath" xml:space="preserve">
    <value>The pre-launch process path is invalid.</value>
  </data>
  <data name="Msg_InvalidPreLaunchStartupDirectory" xml:space="preserve">
    <value>The specified pre-launch startup directory is invalid.</value>
  </data>
  <data name="Msg_InvalidPreLaunchStdoutPath" xml:space="preserve">
    <value>The specified pre-launch stdout file path is invalid.</value>
  </data>
  <data name="Msg_InvalidPreLaunchStderrPath" xml:space="preserve">
    <value>The specified pre-launch stderr file path is invalid.</value>
  </data>
  <data name="Msg_InvalidPreLaunchTimeout" xml:space="preserve">
    <value>Pre-Launch timeout must be a number of seconds greater than or equal to 5 seconds.</value>
  </data>
  <data name="Msg_InvalidPreLaunchRetryAttempts" xml:space="preserve">
    <value>Pre-Launch retry attempts must be a number greater than or equal to 0.</value>
  </data>

  <!-- XML/JSON import -->
  <data name="Msg_FailedToLoadXml" xml:space="preserve">
    <value>Failed to load XML service configuration.</value>
  </data>
  <data name="Msg_FailedToLoadJson" xml:space="preserve">
    <value>Failed to load JSON service configuration.</value>
  </data>

  <!-- XML/JSON export -->
  <data name="SaveFileDialog_XmlTitle" xml:space="preserve">
    <value>Export XML configuration</value>
  </data>
  <data name="SaveFileDialog_JsonTitle" xml:space="preserve">
    <value>Export JSON configuration</value>
  </data>
  <data name="ExportXml_Success" xml:space="preserve">
    <value>XML Configuration exported successfully.</value>
  </data>
  <data name="ExportJson_Success" xml:space="preserve">
    <value>JSON Configuration exported successfully.</value>
  </data>

  <!-- Clear Action -->
  <data name="Menu_ClearAll" xml:space="preserve">
    <value>Clear All</value>
  </data>
  <data name="Confirm_ClearAll" xml:space="preserve">
    <value>Are you sure you want to clear all configuration values?</value>
  </data>

  <!-- General -->
  <data name="Msg_InvalidValue" xml:space="preserve">
    <value>Invalid value.</value>
  </data>
  <data name="Msg_FieldRequired" xml:space="preserve">
    <value>This field is required.</value>
  </data>

  <!-- Buttons -->
  <data name="Button_Install" xml:space="preserve">
    <value>Install</value>
  </data>
  <data name="Button_Uninstall" xml:space="preserve">
    <value>Uninstall</value>
  </data>
  <data name="Button_Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Button_Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="Button_Restart" xml:space="preserve">
    <value>Restart</value>
  </data>
  <data name="Button_Browse" xml:space="preserve">
    <value>Browse</value>
  </data>

  <!-- Messages -->
  <data name="Msg_ValidationError" xml:space="preserve">
    <value>Please fill in all required fields.</value>
  </data>
  <data name="Msg_InvalidPath" xml:space="preserve">
    <value>The specified process path is invalid.</value>
  </data>
  <data name="Msg_InvalidWrapperExePath" xml:space="preserve">
    <value>Service wrapper executable not found.</value>
  </data>
  <data name="Msg_InvalidStartupDirectory" xml:space="preserve">
    <value>The specified startup directory is invalid.</value>
  </data>

  <data name="Msg_InvalidStdoutPath" xml:space="preserve">
    <value>The specified stdout file path is invalid.</value>
  </data>
  <data name="Msg_InvalidStderrPath" xml:space="preserve">
    <value>The specified stderr file path is invalid.</value>
  </data>
  <data name="Msg_InvalidRotationSize" xml:space="preserve">
    <value>Rotation size must be specified in megabytes (MB) and be greater than or equal to 1 MB.</value>
  </data>
  <data name="Msg_InvalidHeartbeatInterval" xml:space="preserve">
    <value>Heartbeat interval must be a number of seconds greater than or equal to 5 seconds.</value>
  </data>
  <data name="Msg_InvalidMaxFailedChecks" xml:space="preserve">
    <value>Max Failed Checks must be a number greater than or equal to 1.</value>
  </data>
  <data name="Msg_InvalidMaxRestartAttempts" xml:space="preserve">
    <value>Max Restart Attempts must be a number greater than or equal to 1.</value>
  </data>

  <data name="Msg_ServiceCreated" xml:space="preserve">
    <value>Service was created successfully.</value>
  </data>
  <data name="Msg_ServiceRemoved" xml:space="preserve">
    <value>Service was removed successfully.</value>
  </data>
  <data name="Msg_UnexpectedError" xml:space="preserve">
    <value>An unexpected error occurred.</value>
  </data>
  <data name="Msg_AdminRightsRequired" xml:space="preserve">
    <value>Administrator privileges are required.</value>
  </data>

  <data name="Msg_ServiceStarted" xml:space="preserve">
    <value>Service was started successfully.</value>
  </data>
  <data name="Msg_ServiceStopped" xml:space="preserve">
    <value>Service was stopped successfully.</value>
  </data>
  <data name="Msg_ServiceRestarted" xml:space="preserve">
    <value>Service was restarted successfully.</value>
  </data>

  <data name="Msg_ManagerAppNotFound" xml:space="preserve">
    <value>Servy Manager App not found.</value>
  </data>

  <data name="Msg_ServiceAlreadyExists" xml:space="preserve">
  <value>A service with this name already exists. Would you like to replace it?

If the service is disabled and marked for deletion, the installation will fail until you restart your PC.</value>
</data>
  <data name="Msg_ServiceDisabled" xml:space="preserve">
    <value>A disabled service with this name already exists. Choose a different name.</value>
  </data>
  <data name="Msg_ServiceNotFound" xml:space="preserve">
    <value>The specified service was not found.</value>
  </data>
  <data name="Msg_ServiceDisabledError" xml:space="preserve">
    <value>The specified service is disabled.</value>
  </data>

</root>
